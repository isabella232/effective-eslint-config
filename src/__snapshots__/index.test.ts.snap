// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Full configuration result 1`] = `
"{
  \\"env\\": {
    \\"browser\\": true,
    \\"es6\\": true,
    \\"jest/globals\\": true,
    \\"node\\": true,
    \\"shared-node-browser\\": true
  },
  \\"globals\\": {},
  \\"parser\\": \\"[PATH]\\",
  \\"parserOptions\\": {
    \\"ecmaFeatures\\": {
      \\"impliedStrict\\": true,
      \\"jsx\\": true
    },
    \\"ecmaVersion\\": 2018,
    \\"sourceType\\": \\"module\\",
    \\"warnOnUnsupportedTypeScriptVersion\\": true
  },
  \\"plugins\\": [
    \\"import\\",
    \\"react\\",
    \\"jsx-a11y\\",
    \\"filenames\\",
    \\"jest\\",
    \\"cypress\\",
    \\"react-hooks\\",
    \\"@typescript-eslint\\"
  ],
  \\"rules\\": {
    \\"@typescript-eslint/adjacent-overload-signatures\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/array-type\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/ban-types\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/camelcase\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/class-name-casing\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/consistent-type-definitions\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/explicit-function-return-type\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/explicit-member-accessibility\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/func-call-spacing\\": [
      \\"warn\\",
      \\"never\\"
    ],
    \\"@typescript-eslint/indent\\": [
      \\"warn\\",
      2,
      {
        \\"CallExpression\\": {
          \\"arguments\\": 1
        },
        \\"FunctionExpression\\": {
          \\"body\\": 1,
          \\"parameters\\": 1
        },
        \\"MemberExpression\\": 1,
        \\"outerIIFEBody\\": 0,
        \\"SwitchCase\\": 1,
        \\"VariableDeclarator\\": 1,
        \\"flatTernaryExpressions\\": false,
        \\"ignoreComments\\": false
      }
    ],
    \\"@typescript-eslint/interface-name-prefix\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/member-delimiter-style\\": [
      \\"warn\\",
      {
        \\"multiline\\": {
          \\"delimiter\\": \\"semi\\",
          \\"requireLast\\": true
        },
        \\"singleline\\": {
          \\"delimiter\\": \\"semi\\",
          \\"requireLast\\": false
        }
      }
    ],
    \\"@typescript-eslint/no-angle-bracket-type-assertion\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-array-constructor\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-empty-interface\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-explicit-any\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/no-extra-parens\\": [
      \\"warn\\",
      \\"all\\",
      {
        \\"conditionalAssign\\": true,
        \\"enforceForArrowConditionals\\": false,
        \\"ignoreJSX\\": \\"all\\",
        \\"nestedBinaryExpressions\\": false,
        \\"returnAssign\\": false
      }
    ],
    \\"@typescript-eslint/no-inferrable-types\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-magic-numbers\\": [
      \\"warn\\",
      {
        \\"detectObjects\\": false,
        \\"enforceConst\\": true,
        \\"ignore\\": [
          0,
          1,
          2,
          10
        ],
        \\"ignoreArrayIndexes\\": true
      }
    ],
    \\"@typescript-eslint/no-misused-new\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-namespace\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-non-null-assertion\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-object-literal-type-assertion\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-parameter-properties\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-triple-slash-reference\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-unused-vars\\": [
      \\"error\\",
      {
        \\"args\\": \\"none\\",
        \\"ignoreRestSiblings\\": true,
        \\"varsIgnorePattern\\": \\"^_\\"
      }
    ],
    \\"@typescript-eslint/no-use-before-define\\": [
      \\"error\\",
      {
        \\"classes\\": false,
        \\"functions\\": false
      }
    ],
    \\"@typescript-eslint/no-useless-constructor\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-var-requires\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/prefer-interface\\": [
      \\"off\\"
    ],
    \\"@typescript-eslint/prefer-namespace-keyword\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/semi\\": [
      \\"warn\\",
      \\"never\\"
    ],
    \\"@typescript-eslint/type-annotation-spacing\\": [
      \\"error\\"
    ],
    \\"array-bracket-spacing\\": [
      \\"warn\\",
      \\"always\\",
      {
        \\"objectsInArrays\\": false
      }
    ],
    \\"array-callback-return\\": [
      \\"error\\",
      {
        \\"allowImplicit\\": true
      }
    ],
    \\"arrow-body-style\\": [
      \\"error\\",
      \\"as-needed\\",
      {
        \\"requireReturnForObjectLiteral\\": false
      }
    ],
    \\"arrow-parens\\": [
      \\"error\\",
      \\"as-needed\\",
      {
        \\"requireForBlockBody\\": true
      }
    ],
    \\"arrow-spacing\\": [
      \\"error\\",
      {
        \\"before\\": true,
        \\"after\\": true
      }
    ],
    \\"block-scoped-var\\": [
      \\"error\\"
    ],
    \\"camelcase\\": [
      \\"off\\"
    ],
    \\"comma-dangle\\": [
      \\"warn\\",
      \\"never\\"
    ],
    \\"comma-style\\": [
      \\"warn\\",
      \\"last\\"
    ],
    \\"complexity\\": [
      \\"warn\\",
      11
    ],
    \\"consistent-return\\": [
      \\"warn\\"
    ],
    \\"constructor-super\\": [
      \\"error\\"
    ],
    \\"curly\\": [
      \\"error\\",
      \\"multi-line\\"
    ],
    \\"cypress/no-assigning-return-values\\": [
      \\"error\\"
    ],
    \\"cypress/no-unnecessary-waiting\\": [
      \\"error\\"
    ],
    \\"default-case\\": [
      \\"off\\"
    ],
    \\"dot-location\\": [
      \\"error\\",
      \\"property\\"
    ],
    \\"dot-notation\\": [
      \\"error\\",
      {
        \\"allowKeywords\\": true,
        \\"allowPattern\\": \\"\\"
      }
    ],
    \\"eqeqeq\\": [
      \\"error\\",
      \\"smart\\"
    ],
    \\"filenames/match-exported\\": [
      \\"error\\"
    ],
    \\"filenames/match-regex\\": [
      \\"error\\",
      \\"^[a-zA-Z][a-zA-Z0-9.]+$\\"
    ],
    \\"filenames/no-index\\": [
      \\"off\\"
    ],
    \\"for-direction\\": [
      \\"error\\"
    ],
    \\"func-call-spacing\\": [
      \\"off\\"
    ],
    \\"func-names\\": [
      \\"warn\\",
      \\"as-needed\\"
    ],
    \\"func-style\\": [
      \\"warn\\",
      \\"declaration\\",
      {
        \\"allowArrowFunctions\\": true
      }
    ],
    \\"generator-star-spacing\\": [
      \\"error\\",
      {
        \\"before\\": false,
        \\"after\\": true
      }
    ],
    \\"getter-return\\": [
      \\"error\\",
      {
        \\"allowImplicit\\": true
      }
    ],
    \\"global-require\\": [
      \\"error\\"
    ],
    \\"guard-for-in\\": [
      \\"error\\"
    ],
    \\"id-length\\": [
      \\"error\\",
      {
        \\"exceptions\\": [
          \\"i\\",
          \\"l\\",
          \\"id\\",
          \\"fs\\",
          \\"url\\",
          \\"uri\\",
          \\"map\\",
          \\"env\\",
          \\"err\\",
          \\"req\\",
          \\"res\\",
          \\"now\\",
          \\"raw\\",
          \\"key\\",
          \\"val\\",
          \\"obj\\",
          \\"pos\\",
          \\"row\\",
          \\"col\\",
          \\"min\\",
          \\"max\\",
          \\"CWD\\",
          \\"pkg\\",
          \\"css\\",
          \\"app\\",
          \\"api\\",
          \\"cli\\",
          \\"App\\",
          \\"API\\"
        ],
        \\"max\\": 40,
        \\"min\\": 4,
        \\"properties\\": \\"never\\"
      }
    ],
    \\"import/default\\": [
      \\"off\\"
    ],
    \\"import/export\\": [
      \\"off\\"
    ],
    \\"import/first\\": [
      \\"error\\"
    ],
    \\"import/named\\": [
      \\"off\\"
    ],
    \\"import/namespace\\": [
      2
    ],
    \\"import/newline-after-import\\": [
      \\"error\\"
    ],
    \\"import/no-absolute-path\\": [
      \\"error\\"
    ],
    \\"import/no-amd\\": [
      \\"error\\"
    ],
    \\"import/no-duplicates\\": [
      \\"error\\"
    ],
    \\"import/no-dynamic-require\\": [
      \\"error\\"
    ],
    \\"import/no-mutable-exports\\": [
      \\"error\\"
    ],
    \\"import/no-named-as-default\\": [
      1
    ],
    \\"import/no-named-as-default-member\\": [
      \\"error\\"
    ],
    \\"import/no-named-default\\": [
      \\"error\\"
    ],
    \\"import/no-self-import\\": [
      \\"error\\"
    ],
    \\"import/no-unresolved\\": [
      2
    ],
    \\"import/no-useless-path-segments\\": [
      \\"error\\"
    ],
    \\"import/no-webpack-loader-syntax\\": [
      \\"error\\"
    ],
    \\"import/order\\": [
      \\"error\\",
      {
        \\"groups\\": [
          \\"builtin\\",
          \\"external\\",
          \\"unknown\\",
          \\"parent\\",
          \\"sibling\\",
          \\"index\\"
        ],
        \\"newlines-between\\": \\"always\\"
      }
    ],
    \\"indent\\": [
      \\"off\\"
    ],
    \\"jest/no-alias-methods\\": [
      \\"warn\\"
    ],
    \\"jest/no-disabled-tests\\": [
      \\"warn\\"
    ],
    \\"jest/no-focused-tests\\": [
      \\"error\\"
    ],
    \\"jest/no-identical-title\\": [
      \\"error\\"
    ],
    \\"jest/no-jasmine-globals\\": [
      \\"warn\\"
    ],
    \\"jest/no-jest-import\\": [
      \\"error\\"
    ],
    \\"jest/no-test-prefixes\\": [
      \\"error\\"
    ],
    \\"jest/valid-describe\\": [
      \\"error\\"
    ],
    \\"jest/valid-expect\\": [
      \\"error\\"
    ],
    \\"jest/valid-expect-in-promise\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/accessible-emoji\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/alt-text\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/anchor-has-content\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/anchor-is-valid\\": [
      \\"error\\",
      {
        \\"aspects\\": [
          \\"noHref\\",
          \\"invalidHref\\"
        ]
      }
    ],
    \\"jsx-a11y/aria-activedescendant-has-tabindex\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/aria-props\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/aria-proptypes\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/aria-role\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/aria-unsupported-elements\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/click-events-have-key-events\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/control-has-associated-label\\": [
      \\"off\\",
      {
        \\"ignoreElements\\": [
          \\"audio\\",
          \\"canvas\\",
          \\"embed\\",
          \\"input\\",
          \\"textarea\\",
          \\"tr\\",
          \\"video\\"
        ],
        \\"ignoreRoles\\": [
          \\"grid\\",
          \\"listbox\\",
          \\"menu\\",
          \\"menubar\\",
          \\"radiogroup\\",
          \\"row\\",
          \\"tablist\\",
          \\"toolbar\\",
          \\"tree\\",
          \\"treegrid\\"
        ],
        \\"includeRoles\\": [
          \\"alert\\",
          \\"dialog\\"
        ]
      }
    ],
    \\"jsx-a11y/heading-has-content\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/html-has-lang\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/iframe-has-title\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/img-redundant-alt\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/interactive-supports-focus\\": [
      \\"error\\",
      {
        \\"tabbable\\": [
          \\"button\\",
          \\"checkbox\\",
          \\"link\\",
          \\"searchbox\\",
          \\"spinbutton\\",
          \\"switch\\",
          \\"textbox\\"
        ]
      }
    ],
    \\"jsx-a11y/label-has-associated-control\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/label-has-for\\": [
      \\"off\\"
    ],
    \\"jsx-a11y/lang\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/media-has-caption\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/mouse-events-have-key-events\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/no-access-key\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/no-autofocus\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/no-distracting-elements\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/no-interactive-element-to-noninteractive-role\\": [
      \\"error\\",
      {
        \\"tr\\": [
          \\"none\\",
          \\"presentation\\"
        ]
      }
    ],
    \\"jsx-a11y/no-noninteractive-element-interactions\\": [
      \\"error\\",
      {
        \\"handlers\\": [
          \\"onClick\\",
          \\"onError\\",
          \\"onLoad\\",
          \\"onMouseDown\\",
          \\"onMouseUp\\",
          \\"onKeyPress\\",
          \\"onKeyDown\\",
          \\"onKeyUp\\"
        ],
        \\"alert\\": [
          \\"onKeyUp\\",
          \\"onKeyDown\\",
          \\"onKeyPress\\"
        ],
        \\"body\\": [
          \\"onError\\",
          \\"onLoad\\"
        ],
        \\"dialog\\": [
          \\"onKeyUp\\",
          \\"onKeyDown\\",
          \\"onKeyPress\\"
        ],
        \\"iframe\\": [
          \\"onError\\",
          \\"onLoad\\"
        ],
        \\"img\\": [
          \\"onError\\",
          \\"onLoad\\"
        ]
      }
    ],
    \\"jsx-a11y/no-noninteractive-element-to-interactive-role\\": [
      \\"error\\",
      {
        \\"ul\\": [
          \\"listbox\\",
          \\"menu\\",
          \\"menubar\\",
          \\"radiogroup\\",
          \\"tablist\\",
          \\"tree\\",
          \\"treegrid\\"
        ],
        \\"ol\\": [
          \\"listbox\\",
          \\"menu\\",
          \\"menubar\\",
          \\"radiogroup\\",
          \\"tablist\\",
          \\"tree\\",
          \\"treegrid\\"
        ],
        \\"li\\": [
          \\"menuitem\\",
          \\"option\\",
          \\"row\\",
          \\"tab\\",
          \\"treeitem\\"
        ],
        \\"table\\": [
          \\"grid\\"
        ],
        \\"td\\": [
          \\"gridcell\\"
        ]
      }
    ],
    \\"jsx-a11y/no-noninteractive-tabindex\\": [
      \\"error\\",
      {
        \\"tags\\": [],
        \\"roles\\": [
          \\"tabpanel\\"
        ]
      }
    ],
    \\"jsx-a11y/no-onchange\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/no-redundant-roles\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/no-static-element-interactions\\": [
      \\"error\\",
      {
        \\"handlers\\": [
          \\"onClick\\",
          \\"onMouseDown\\",
          \\"onMouseUp\\",
          \\"onKeyPress\\",
          \\"onKeyDown\\",
          \\"onKeyUp\\"
        ]
      }
    ],
    \\"jsx-a11y/role-has-required-aria-props\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/role-supports-aria-props\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/scope\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/tabindex-no-positive\\": [
      \\"error\\"
    ],
    \\"jsx-quotes\\": [
      \\"error\\",
      \\"prefer-double\\"
    ],
    \\"linebreak-style\\": [
      \\"error\\",
      \\"unix\\"
    ],
    \\"max-depth\\": [
      \\"error\\",
      {
        \\"maximum\\": 3
      }
    ],
    \\"max-len\\": [
      \\"error\\",
      {
        \\"code\\": 100,
        \\"comments\\": 140,
        \\"ignoreUrls\\": true,
        \\"tabWidth\\": 2
      }
    ],
    \\"max-params\\": [
      \\"error\\",
      3
    ],
    \\"max-statements\\": [
      \\"error\\",
      30,
      {
        \\"ignoreTopLevelFunctions\\": true
      }
    ],
    \\"max-statements-per-line\\": [
      \\"error\\",
      {
        \\"max\\": 2
      }
    ],
    \\"new-parens\\": [
      \\"error\\"
    ],
    \\"no-alert\\": [
      \\"error\\"
    ],
    \\"no-array-constructor\\": [
      \\"off\\"
    ],
    \\"no-async-promise-executor\\": [
      \\"error\\"
    ],
    \\"no-await-in-loop\\": [
      \\"error\\"
    ],
    \\"no-buffer-constructor\\": [
      \\"error\\"
    ],
    \\"no-caller\\": [
      \\"error\\"
    ],
    \\"no-case-declarations\\": [
      \\"error\\"
    ],
    \\"no-class-assign\\": [
      \\"error\\"
    ],
    \\"no-compare-neg-zero\\": [
      \\"error\\"
    ],
    \\"no-cond-assign\\": [
      \\"error\\",
      \\"except-parens\\"
    ],
    \\"no-confusing-arrow\\": [
      \\"error\\",
      {
        \\"allowParens\\": true
      }
    ],
    \\"no-const-assign\\": [
      \\"error\\"
    ],
    \\"no-constant-condition\\": [
      \\"error\\"
    ],
    \\"no-control-regex\\": [
      \\"error\\"
    ],
    \\"no-debugger\\": [
      \\"error\\"
    ],
    \\"no-delete-var\\": [
      \\"error\\"
    ],
    \\"no-div-regex\\": [
      \\"error\\"
    ],
    \\"no-dupe-args\\": [
      \\"error\\"
    ],
    \\"no-dupe-class-members\\": [
      \\"off\\"
    ],
    \\"no-dupe-keys\\": [
      \\"error\\"
    ],
    \\"no-duplicate-case\\": [
      \\"error\\"
    ],
    \\"no-duplicate-imports\\": [
      \\"error\\"
    ],
    \\"no-empty\\": [
      \\"error\\"
    ],
    \\"no-empty-character-class\\": [
      \\"error\\"
    ],
    \\"no-empty-pattern\\": [
      \\"error\\"
    ],
    \\"no-eval\\": [
      \\"error\\"
    ],
    \\"no-ex-assign\\": [
      \\"error\\"
    ],
    \\"no-extend-native\\": [
      \\"error\\"
    ],
    \\"no-extra-bind\\": [
      \\"error\\"
    ],
    \\"no-extra-boolean-cast\\": [
      \\"error\\"
    ],
    \\"no-extra-label\\": [
      \\"error\\"
    ],
    \\"no-extra-parens\\": [
      \\"off\\"
    ],
    \\"no-extra-semi\\": [
      \\"error\\"
    ],
    \\"no-fallthrough\\": [
      \\"error\\"
    ],
    \\"no-floating-decimal\\": [
      \\"error\\"
    ],
    \\"no-func-assign\\": [
      \\"error\\"
    ],
    \\"no-global-assign\\": [
      \\"error\\",
      {
        \\"exceptions\\": []
      }
    ],
    \\"no-implied-eval\\": [
      \\"error\\"
    ],
    \\"no-inner-declarations\\": [
      \\"error\\"
    ],
    \\"no-invalid-regexp\\": [
      \\"error\\"
    ],
    \\"no-irregular-whitespace\\": [
      \\"error\\"
    ],
    \\"no-iterator\\": [
      \\"error\\"
    ],
    \\"no-label-var\\": [
      \\"error\\"
    ],
    \\"no-labels\\": [
      \\"error\\",
      {
        \\"allowLoop\\": true,
        \\"allowSwitch\\": false
      }
    ],
    \\"no-lone-blocks\\": [
      \\"error\\"
    ],
    \\"no-loop-func\\": [
      \\"error\\"
    ],
    \\"no-magic-numbers\\": [
      \\"off\\"
    ],
    \\"no-misleading-character-class\\": [
      \\"error\\"
    ],
    \\"no-mixed-operators\\": [
      \\"error\\",
      {
        \\"groups\\": [
          [
            \\"&\\",
            \\"|\\",
            \\"^\\",
            \\"~\\",
            \\"<<\\",
            \\">>\\",
            \\">>>\\"
          ],
          [
            \\"==\\",
            \\"!=\\",
            \\"===\\",
            \\"!==\\",
            \\">\\",
            \\">=\\",
            \\"<\\",
            \\"<=\\"
          ],
          [
            \\"&&\\",
            \\"||\\"
          ],
          [
            \\"in\\",
            \\"instanceof\\"
          ]
        ],
        \\"allowSamePrecedence\\": false
      }
    ],
    \\"no-mixed-spaces-and-tabs\\": [
      \\"error\\"
    ],
    \\"no-multi-spaces\\": [
      \\"error\\",
      {
        \\"ignoreEOLComments\\": false
      }
    ],
    \\"no-multi-str\\": [
      \\"error\\"
    ],
    \\"no-multiple-empty-lines\\": [
      \\"warn\\",
      {
        \\"max\\": 4,
        \\"maxBOF\\": 0,
        \\"maxEOF\\": 1
      }
    ],
    \\"no-nested-ternary\\": [
      \\"error\\"
    ],
    \\"no-new\\": [
      \\"error\\"
    ],
    \\"no-new-func\\": [
      \\"error\\"
    ],
    \\"no-new-object\\": [
      \\"error\\"
    ],
    \\"no-new-require\\": [
      \\"error\\"
    ],
    \\"no-new-symbol\\": [
      \\"error\\"
    ],
    \\"no-new-wrappers\\": [
      \\"error\\"
    ],
    \\"no-obj-calls\\": [
      \\"error\\"
    ],
    \\"no-octal\\": [
      \\"error\\"
    ],
    \\"no-octal-escape\\": [
      \\"error\\"
    ],
    \\"no-param-reassign\\": [
      \\"error\\"
    ],
    \\"no-path-concat\\": [
      \\"error\\"
    ],
    \\"no-proto\\": [
      \\"error\\"
    ],
    \\"no-prototype-builtins\\": [
      \\"error\\"
    ],
    \\"no-redeclare\\": [
      \\"error\\"
    ],
    \\"no-regex-spaces\\": [
      \\"error\\"
    ],
    \\"no-restricted-globals\\": [
      \\"error\\",
      \\"addEventListener\\",
      \\"blur\\",
      \\"close\\",
      \\"closed\\",
      \\"confirm\\",
      \\"defaultStatus\\",
      \\"defaultstatus\\",
      \\"event\\",
      \\"external\\",
      \\"find\\",
      \\"focus\\",
      \\"frameElement\\",
      \\"frames\\",
      \\"history\\",
      \\"innerHeight\\",
      \\"innerWidth\\",
      \\"length\\",
      \\"location\\",
      \\"locationbar\\",
      \\"menubar\\",
      \\"moveBy\\",
      \\"moveTo\\",
      \\"name\\",
      \\"onblur\\",
      \\"onerror\\",
      \\"onfocus\\",
      \\"onload\\",
      \\"onresize\\",
      \\"onunload\\",
      \\"open\\",
      \\"opener\\",
      \\"opera\\",
      \\"outerHeight\\",
      \\"outerWidth\\",
      \\"pageXOffset\\",
      \\"pageYOffset\\",
      \\"parent\\",
      \\"print\\",
      \\"removeEventListener\\",
      \\"resizeBy\\",
      \\"resizeTo\\",
      \\"screen\\",
      \\"screenLeft\\",
      \\"screenTop\\",
      \\"screenX\\",
      \\"screenY\\",
      \\"scroll\\",
      \\"scrollbars\\",
      \\"scrollBy\\",
      \\"scrollTo\\",
      \\"scrollX\\",
      \\"scrollY\\",
      \\"self\\",
      \\"status\\",
      \\"statusbar\\",
      \\"stop\\",
      \\"toolbar\\",
      \\"top\\"
    ],
    \\"no-restricted-properties\\": [
      \\"error\\",
      {
        \\"message\\": \\"arguments.callee is deprecated\\",
        \\"object\\": \\"arguments\\",
        \\"property\\": \\"callee\\"
      },
      {
        \\"message\\": \\"Please use Number.isFinite instead\\",
        \\"object\\": \\"global\\",
        \\"property\\": \\"isFinite\\"
      },
      {
        \\"message\\": \\"Please use Number.isFinite instead\\",
        \\"object\\": \\"self\\",
        \\"property\\": \\"isFinite\\"
      },
      {
        \\"message\\": \\"Please use Number.isFinite instead\\",
        \\"object\\": \\"window\\",
        \\"property\\": \\"isFinite\\"
      },
      {
        \\"message\\": \\"Please use Number.isNaN instead\\",
        \\"object\\": \\"global\\",
        \\"property\\": \\"isNaN\\"
      },
      {
        \\"message\\": \\"Please use Number.isNaN instead\\",
        \\"object\\": \\"self\\",
        \\"property\\": \\"isNaN\\"
      },
      {
        \\"message\\": \\"Please use Number.isNaN instead\\",
        \\"object\\": \\"window\\",
        \\"property\\": \\"isNaN\\"
      },
      {
        \\"message\\": \\"Please use Object.defineProperty instead.\\",
        \\"property\\": \\"__defineGetter__\\"
      },
      {
        \\"message\\": \\"Please use Object.defineProperty instead.\\",
        \\"property\\": \\"__defineSetter__\\"
      },
      {
        \\"message\\": \\"Use the exponentiation operator (**) instead.\\",
        \\"object\\": \\"Math\\",
        \\"property\\": \\"pow\\"
      }
    ],
    \\"no-restricted-syntax\\": [
      \\"error\\",
      \\"WithStatement\\"
    ],
    \\"no-return-assign\\": [
      \\"error\\",
      \\"always\\"
    ],
    \\"no-return-await\\": [
      \\"error\\"
    ],
    \\"no-script-url\\": [
      \\"error\\"
    ],
    \\"no-self-assign\\": [
      \\"error\\",
      {
        \\"props\\": false
      }
    ],
    \\"no-self-compare\\": [
      \\"error\\"
    ],
    \\"no-sequences\\": [
      \\"error\\"
    ],
    \\"no-shadow\\": [
      \\"error\\"
    ],
    \\"no-shadow-restricted-names\\": [
      \\"error\\"
    ],
    \\"no-sparse-arrays\\": [
      \\"error\\"
    ],
    \\"no-template-curly-in-string\\": [
      \\"error\\"
    ],
    \\"no-this-before-super\\": [
      \\"error\\"
    ],
    \\"no-throw-literal\\": [
      \\"error\\"
    ],
    \\"no-trailing-spaces\\": [
      \\"warn\\"
    ],
    \\"no-undef\\": [
      \\"error\\"
    ],
    \\"no-undef-init\\": [
      \\"error\\"
    ],
    \\"no-unexpected-multiline\\": [
      \\"error\\"
    ],
    \\"no-unmodified-loop-condition\\": [
      \\"error\\"
    ],
    \\"no-unneeded-ternary\\": [
      \\"error\\"
    ],
    \\"no-unreachable\\": [
      \\"error\\"
    ],
    \\"no-unsafe-finally\\": [
      \\"error\\"
    ],
    \\"no-unsafe-negation\\": [
      \\"error\\"
    ],
    \\"no-unused-expressions\\": [
      \\"error\\",
      {
        \\"allowShortCircuit\\": true,
        \\"allowTernary\\": true,
        \\"allowTaggedTemplates\\": true
      }
    ],
    \\"no-unused-labels\\": [
      \\"error\\"
    ],
    \\"no-unused-vars\\": [
      \\"off\\"
    ],
    \\"no-use-before-define\\": [
      \\"off\\"
    ],
    \\"no-useless-catch\\": [
      \\"error\\"
    ],
    \\"no-useless-computed-key\\": [
      \\"error\\"
    ],
    \\"no-useless-concat\\": [
      \\"error\\"
    ],
    \\"no-useless-constructor\\": [
      \\"off\\"
    ],
    \\"no-useless-escape\\": [
      \\"error\\"
    ],
    \\"no-useless-rename\\": [
      \\"error\\",
      {
        \\"ignoreDestructuring\\": false,
        \\"ignoreImport\\": false,
        \\"ignoreExport\\": false
      }
    ],
    \\"no-useless-return\\": [
      \\"error\\"
    ],
    \\"no-var\\": [
      \\"error\\"
    ],
    \\"no-void\\": [
      \\"error\\"
    ],
    \\"no-whitespace-before-property\\": [
      \\"warn\\"
    ],
    \\"no-with\\": [
      \\"error\\"
    ],
    \\"object-curly-spacing\\": [
      \\"warn\\",
      \\"always\\"
    ],
    \\"object-property-newline\\": [
      \\"warn\\",
      {
        \\"allowMultiplePropertiesPerLine\\": true,
        \\"allowAllPropertiesOnSameLine\\": false
      }
    ],
    \\"object-shorthand\\": [
      \\"error\\",
      \\"always\\",
      {
        \\"ignoreConstructors\\": false,
        \\"avoidQuotes\\": true
      }
    ],
    \\"one-var-declaration-per-line\\": [
      \\"warn\\",
      \\"initializations\\"
    ],
    \\"operator-assignment\\": [
      \\"warn\\"
    ],
    \\"operator-linebreak\\": [
      \\"warn\\",
      \\"after\\"
    ],
    \\"prefer-arrow-callback\\": [
      \\"warn\\",
      {
        \\"allowNamedFunctions\\": false,
        \\"allowUnboundThis\\": true
      }
    ],
    \\"prefer-const\\": [
      \\"warn\\",
      {
        \\"destructuring\\": \\"any\\",
        \\"ignoreReadBeforeAssign\\": true
      }
    ],
    \\"prefer-destructuring\\": [
      \\"warn\\",
      {
        \\"VariableDeclarator\\": {
          \\"array\\": false,
          \\"object\\": true
        },
        \\"AssignmentExpression\\": {
          \\"array\\": true,
          \\"object\\": true
        }
      },
      {
        \\"enforceForRenamedProperties\\": false
      }
    ],
    \\"prefer-numeric-literals\\": [
      \\"error\\"
    ],
    \\"prefer-promise-reject-errors\\": [
      \\"error\\",
      {
        \\"allowEmptyReject\\": true
      }
    ],
    \\"prefer-rest-params\\": [
      \\"warn\\"
    ],
    \\"prefer-spread\\": [
      \\"warn\\"
    ],
    \\"prefer-template\\": [
      \\"warn\\"
    ],
    \\"radix\\": [
      \\"error\\"
    ],
    \\"react-hooks/exhaustive-deps\\": [
      \\"warn\\"
    ],
    \\"react-hooks/rules-of-hooks\\": [
      \\"error\\"
    ],
    \\"react/button-has-type\\": [
      \\"error\\",
      {
        \\"button\\": true,
        \\"reset\\": false,
        \\"submit\\": true
      }
    ],
    \\"react/default-props-match-prop-types\\": [
      \\"error\\",
      {
        \\"allowRequiredDefaults\\": false
      }
    ],
    \\"react/destructuring-assignment\\": [
      \\"error\\",
      \\"always\\"
    ],
    \\"react/display-name\\": [
      2
    ],
    \\"react/forbid-foreign-prop-types\\": [
      \\"error\\",
      {
        \\"allowInPropTypes\\": true
      }
    ],
    \\"react/forbid-prop-types\\": [
      \\"error\\",
      {
        \\"checkChildContextTypes\\": true,
        \\"checkContextTypes\\": true,
        \\"forbid\\": [
          \\"any\\",
          \\"array\\",
          \\"object\\"
        ]
      }
    ],
    \\"react/jsx-boolean-value\\": [
      \\"error\\",
      \\"never\\",
      {
        \\"always\\": []
      }
    ],
    \\"react/jsx-closing-bracket-location\\": [
      \\"error\\",
      \\"line-aligned\\"
    ],
    \\"react/jsx-closing-tag-location\\": [
      \\"error\\"
    ],
    \\"react/jsx-curly-brace-presence\\": [
      \\"error\\",
      {
        \\"children\\": \\"never\\",
        \\"props\\": \\"never\\"
      }
    ],
    \\"react/jsx-curly-spacing\\": [
      \\"error\\",
      \\"never\\",
      {
        \\"allowMultiline\\": true
      }
    ],
    \\"react/jsx-equals-spacing\\": [
      \\"error\\",
      \\"never\\"
    ],
    \\"react/jsx-first-prop-new-line\\": [
      \\"error\\",
      \\"multiline-multiprop\\"
    ],
    \\"react/jsx-indent\\": [
      \\"error\\",
      2
    ],
    \\"react/jsx-indent-props\\": [
      \\"error\\",
      2
    ],
    \\"react/jsx-key\\": [
      2
    ],
    \\"react/jsx-max-props-per-line\\": [
      \\"error\\",
      {
        \\"maximum\\": 1,
        \\"when\\": \\"multiline\\"
      }
    ],
    \\"react/jsx-no-bind\\": [
      \\"error\\",
      {
        \\"allowArrowFunctions\\": true,
        \\"allowBind\\": false,
        \\"allowFunctions\\": false,
        \\"ignoreDOMComponents\\": true,
        \\"ignoreRefs\\": true
      }
    ],
    \\"react/jsx-no-comment-textnodes\\": [
      \\"error\\"
    ],
    \\"react/jsx-no-duplicate-props\\": [
      \\"error\\",
      {
        \\"ignoreCase\\": true
      }
    ],
    \\"react/jsx-no-target-blank\\": [
      \\"error\\",
      {
        \\"enforceDynamicLinks\\": \\"always\\"
      }
    ],
    \\"react/jsx-no-undef\\": [
      \\"error\\"
    ],
    \\"react/jsx-one-expression-per-line\\": [
      \\"error\\",
      {
        \\"allow\\": \\"single-child\\"
      }
    ],
    \\"react/jsx-pascal-case\\": [
      \\"error\\",
      {
        \\"allowAllCaps\\": true,
        \\"ignore\\": []
      }
    ],
    \\"react/jsx-props-no-multi-spaces\\": [
      \\"error\\"
    ],
    \\"react/jsx-tag-spacing\\": [
      \\"error\\",
      {
        \\"afterOpening\\": \\"never\\",
        \\"beforeClosing\\": \\"never\\",
        \\"beforeSelfClosing\\": \\"always\\",
        \\"closingSlash\\": \\"never\\"
      }
    ],
    \\"react/jsx-uses-react\\": [
      \\"error\\"
    ],
    \\"react/jsx-uses-vars\\": [
      \\"error\\"
    ],
    \\"react/jsx-wrap-multilines\\": [
      \\"error\\",
      {
        \\"arrow\\": \\"parens-new-line\\",
        \\"assignment\\": \\"parens-new-line\\",
        \\"condition\\": \\"parens-new-line\\",
        \\"declaration\\": \\"parens-new-line\\",
        \\"logical\\": \\"parens-new-line\\",
        \\"prop\\": \\"parens-new-line\\",
        \\"return\\": \\"parens-new-line\\"
      }
    ],
    \\"react/no-access-state-in-setstate\\": [
      \\"error\\"
    ],
    \\"react/no-array-index-key\\": [
      \\"error\\"
    ],
    \\"react/no-children-prop\\": [
      2
    ],
    \\"react/no-danger\\": [
      \\"warn\\"
    ],
    \\"react/no-danger-with-children\\": [
      \\"error\\"
    ],
    \\"react/no-deprecated\\": [
      2
    ],
    \\"react/no-did-update-set-state\\": [
      \\"error\\"
    ],
    \\"react/no-direct-mutation-state\\": [
      \\"error\\"
    ],
    \\"react/no-find-dom-node\\": [
      2
    ],
    \\"react/no-is-mounted\\": [
      \\"error\\"
    ],
    \\"react/no-redundant-should-component-update\\": [
      \\"error\\"
    ],
    \\"react/no-render-return-value\\": [
      2
    ],
    \\"react/no-string-refs\\": [
      2
    ],
    \\"react/no-this-in-sfc\\": [
      \\"error\\"
    ],
    \\"react/no-typos\\": [
      \\"error\\"
    ],
    \\"react/no-unescaped-entities\\": [
      2
    ],
    \\"react/no-unknown-property\\": [
      2
    ],
    \\"react/no-unsafe\\": [
      0
    ],
    \\"react/no-unused-prop-types\\": [
      \\"error\\",
      {
        \\"customValidators\\": [],
        \\"skipShapeProps\\": true
      }
    ],
    \\"react/no-unused-state\\": [
      \\"error\\"
    ],
    \\"react/no-will-update-set-state\\": [
      \\"error\\"
    ],
    \\"react/prefer-es6-class\\": [
      \\"error\\",
      \\"always\\"
    ],
    \\"react/prefer-stateless-function\\": [
      \\"warn\\",
      {
        \\"ignorePureComponents\\": true
      }
    ],
    \\"react/prop-types\\": [
      \\"off\\"
    ],
    \\"react/react-in-jsx-scope\\": [
      \\"error\\"
    ],
    \\"react/require-default-props\\": [
      \\"error\\",
      {
        \\"forbidDefaultForRequired\\": true
      }
    ],
    \\"react/require-render-return\\": [
      \\"error\\"
    ],
    \\"react/self-closing-comp\\": [
      \\"error\\"
    ],
    \\"react/style-prop-object\\": [
      \\"off\\"
    ],
    \\"react/void-dom-elements-no-children\\": [
      \\"error\\"
    ],
    \\"require-atomic-updates\\": [
      \\"error\\"
    ],
    \\"require-yield\\": [
      \\"error\\"
    ],
    \\"rest-spread-spacing\\": [
      \\"error\\",
      \\"never\\"
    ],
    \\"semi\\": [
      \\"off\\"
    ],
    \\"sort-imports\\": [
      \\"error\\",
      {
        \\"ignoreDeclarationSort\\": true,
        \\"ignoreCase\\": false,
        \\"ignoreMemberSort\\": false
      }
    ],
    \\"space-before-function-paren\\": [
      \\"warn\\",
      {
        \\"anonymous\\": \\"never\\",
        \\"asyncArrow\\": \\"always\\",
        \\"named\\": \\"never\\"
      }
    ],
    \\"spaced-comment\\": [
      \\"warn\\",
      \\"always\\",
      {
        \\"exceptions\\": [
          \\"*\\",
          \\"=\\",
          \\"-\\"
        ]
      }
    ],
    \\"strict\\": [
      \\"error\\",
      \\"never\\"
    ],
    \\"symbol-description\\": [
      \\"error\\"
    ],
    \\"template-curly-spacing\\": [
      \\"error\\"
    ],
    \\"unicode-bom\\": [
      \\"error\\",
      \\"never\\"
    ],
    \\"use-isnan\\": [
      \\"error\\"
    ],
    \\"valid-typeof\\": [
      \\"error\\",
      {
        \\"requireStringLiterals\\": true
      }
    ],
    \\"vars-on-top\\": [
      \\"error\\"
    ],
    \\"wrap-iife\\": [
      \\"error\\",
      \\"outside\\",
      {
        \\"functionPrototypeMethods\\": false
      }
    ],
    \\"yield-star-spacing\\": [
      \\"error\\",
      \\"after\\"
    ],
    \\"yoda\\": [
      \\"error\\"
    ]
  },
  \\"settings\\": {
    \\"import/extensions\\": [
      \\".ts\\",
      \\".tsx\\",
      \\".d.ts\\",
      \\".js\\",
      \\".jsx\\"
    ],
    \\"import/parsers\\": {
      \\"@typescript-eslint/parser\\": [
        \\".ts\\",
        \\".tsx\\",
        \\".d.ts\\"
      ]
    },
    \\"import/resolver\\": {
      \\"babel-module\\": {
        \\"alias\\": {
          \\"-\\": \\"./src/\\"
        },
        \\"extensions\\": [
          \\".js\\",
          \\".jsx\\",
          \\".ts\\",
          \\".tsx\\",
          \\".json\\"
        ]
      },
      \\"node\\": {
        \\"extensions\\": [
          \\".ts\\",
          \\".tsx\\",
          \\".d.ts\\",
          \\".js\\",
          \\".jsx\\"
        ]
      }
    },
    \\"react\\": {
      \\"version\\": \\"detect\\"
    }
  }
}"
`;

exports[`load config in eslint to validate all rule syntax is correct 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": "<text>",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [],
      "warningCount": 0,
    },
  ],
  "usedDeprecatedRules": Array [],
  "warningCount": 0,
}
`;

exports[`reports undeclared variable 1`] = `
Object {
  "errorCount": 1,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "results": Array [
    Object {
      "errorCount": 1,
      "filePath": "<text>",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 1,
          "endColumn": 2,
          "endLine": 1,
          "line": 1,
          "message": "'i' is not defined.",
          "messageId": "undef",
          "nodeType": "Identifier",
          "ruleId": "no-undef",
          "severity": 2,
        },
      ],
      "source": "i++",
      "warningCount": 0,
    },
  ],
  "usedDeprecatedRules": Array [],
  "warningCount": 0,
}
`;
