// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Full configuration result 1`] = `
"{
  \\"env\\": {
    \\"browser\\": true,
    \\"es6\\": true,
    \\"node\\": true,
    \\"shared-node-browser\\": true
  },
  \\"globals\\": {},
  \\"ignorePatterns\\": [
    \\"dist\\"
  ],
  \\"parser\\": \\"[PATH]\\",
  \\"parserOptions\\": {
    \\"ecmaFeatures\\": {
      \\"impliedStrict\\": true,
      \\"jsx\\": true
    },
    \\"ecmaVersion\\": 2018,
    \\"sourceType\\": \\"module\\",
    \\"warnOnUnsupportedTypeScriptVersion\\": true
  },
  \\"plugins\\": [
    \\"filenames\\",
    \\"jest\\",
    \\"unicorn\\",
    \\"shopify-lean\\",
    \\"jsdoc\\",
    \\"react-hooks\\",
    \\"jsx-a11y\\",
    \\"react\\",
    \\"import\\",
    \\"@typescript-eslint\\"
  ],
  \\"rules\\": {
    \\"@typescript-eslint/adjacent-overload-signatures\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/ban-ts-comment\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/ban-types\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/consistent-type-assertions\\": [
      \\"error\\",
      {
        \\"assertionStyle\\": \\"as\\"
      }
    ],
    \\"@typescript-eslint/consistent-type-definitions\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/explicit-function-return-type\\": [
      \\"off\\"
    ],
    \\"@typescript-eslint/func-call-spacing\\": [
      \\"warn\\",
      \\"never\\"
    ],
    \\"@typescript-eslint/member-delimiter-style\\": [
      \\"warn\\",
      {
        \\"multiline\\": {
          \\"delimiter\\": \\"none\\",
          \\"requireLast\\": false
        },
        \\"singleline\\": {
          \\"delimiter\\": \\"semi\\",
          \\"requireLast\\": false
        }
      }
    ],
    \\"@typescript-eslint/naming-convention\\": [
      \\"error\\",
      {
        \\"selector\\": \\"default\\",
        \\"format\\": [
          \\"camelCase\\"
        ]
      },
      {
        \\"selector\\": \\"function\\",
        \\"format\\": [
          \\"PascalCase\\",
          \\"camelCase\\"
        ]
      },
      {
        \\"selector\\": \\"variable\\",
        \\"format\\": [
          \\"PascalCase\\",
          \\"camelCase\\",
          \\"UPPER_CASE\\"
        ]
      },
      {
        \\"selector\\": \\"parameter\\",
        \\"format\\": [
          \\"PascalCase\\",
          \\"camelCase\\"
        ],
        \\"leadingUnderscore\\": \\"allow\\"
      },
      {
        \\"selector\\": \\"memberLike\\",
        \\"format\\": [
          \\"PascalCase\\",
          \\"camelCase\\",
          \\"UPPER_CASE\\"
        ]
      },
      {
        \\"selector\\": \\"typeLike\\",
        \\"format\\": [
          \\"PascalCase\\"
        ]
      }
    ],
    \\"@typescript-eslint/no-array-constructor\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/no-empty-function\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-empty-interface\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/no-explicit-any\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/no-extra-parens\\": [
      \\"warn\\",
      \\"all\\",
      {
        \\"conditionalAssign\\": true,
        \\"returnAssign\\": false,
        \\"nestedBinaryExpressions\\": false,
        \\"ignoreJSX\\": \\"all\\",
        \\"enforceForArrowConditionals\\": true,
        \\"enforceForSequenceExpressions\\": true
      }
    ],
    \\"@typescript-eslint/no-inferrable-types\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/no-magic-numbers\\": [
      \\"warn\\",
      {
        \\"detectObjects\\": false,
        \\"enforceConst\\": true,
        \\"ignore\\": [
          -1,
          0,
          1,
          2,
          10
        ],
        \\"ignoreArrayIndexes\\": true
      }
    ],
    \\"@typescript-eslint/no-misused-new\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-namespace\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-non-null-assertion\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/no-this-alias\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-unused-expressions\\": [
      \\"error\\",
      {
        \\"allowShortCircuit\\": true,
        \\"allowTernary\\": true,
        \\"allowTaggedTemplates\\": true
      }
    ],
    \\"@typescript-eslint/no-unused-vars\\": [
      \\"error\\",
      {
        \\"args\\": \\"none\\",
        \\"ignoreRestSiblings\\": true,
        \\"varsIgnorePattern\\": \\"^_\\"
      }
    ],
    \\"@typescript-eslint/no-use-before-define\\": [
      \\"error\\",
      {
        \\"classes\\": false,
        \\"functions\\": false
      }
    ],
    \\"@typescript-eslint/no-useless-constructor\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/no-var-requires\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/prefer-namespace-keyword\\": [
      \\"warn\\"
    ],
    \\"@typescript-eslint/semi\\": [
      \\"warn\\",
      \\"never\\"
    ],
    \\"@typescript-eslint/space-before-function-paren\\": [
      \\"warn\\",
      {
        \\"anonymous\\": \\"never\\",
        \\"asyncArrow\\": \\"always\\",
        \\"named\\": \\"never\\"
      }
    ],
    \\"@typescript-eslint/triple-slash-reference\\": [
      \\"error\\"
    ],
    \\"@typescript-eslint/type-annotation-spacing\\": [
      \\"warn\\"
    ],
    \\"array-bracket-spacing\\": [
      \\"warn\\",
      \\"always\\",
      {
        \\"objectsInArrays\\": false
      }
    ],
    \\"array-callback-return\\": [
      \\"error\\"
    ],
    \\"arrow-body-style\\": [
      \\"warn\\",
      \\"as-needed\\",
      {
        \\"requireReturnForObjectLiteral\\": false
      }
    ],
    \\"arrow-parens\\": [
      \\"warn\\",
      \\"always\\"
    ],
    \\"arrow-spacing\\": [
      \\"warn\\",
      {
        \\"before\\": true,
        \\"after\\": true
      }
    ],
    \\"camelcase\\": [
      \\"off\\"
    ],
    \\"comma-dangle\\": [
      \\"warn\\",
      \\"never\\"
    ],
    \\"comma-style\\": [
      \\"warn\\",
      \\"last\\"
    ],
    \\"constructor-super\\": [
      \\"error\\"
    ],
    \\"default-case\\": [
      \\"error\\",
      {
        \\"commentPattern\\": \\"^no default$\\"
      }
    ],
    \\"dot-location\\": [
      \\"warn\\",
      \\"property\\"
    ],
    \\"eqeqeq\\": [
      \\"warn\\",
      \\"smart\\"
    ],
    \\"filenames/match-exported\\": [
      \\"warn\\"
    ],
    \\"for-direction\\": [
      \\"error\\"
    ],
    \\"func-names\\": [
      \\"warn\\",
      \\"as-needed\\"
    ],
    \\"func-style\\": [
      \\"warn\\",
      \\"declaration\\",
      {
        \\"allowArrowFunctions\\": true
      }
    ],
    \\"generator-star-spacing\\": [
      \\"warn\\",
      {
        \\"before\\": false,
        \\"after\\": true
      }
    ],
    \\"getter-return\\": [
      \\"error\\"
    ],
    \\"id-length\\": [
      \\"error\\",
      {
        \\"exceptions\\": [
          \\"i\\",
          \\"l\\",
          \\"id\\",
          \\"fs\\"
        ],
        \\"max\\": 40,
        \\"min\\": 3,
        \\"properties\\": \\"never\\"
      }
    ],
    \\"import/first\\": [
      \\"warn\\"
    ],
    \\"import/named\\": [
      \\"error\\"
    ],
    \\"import/newline-after-import\\": [
      \\"warn\\"
    ],
    \\"import/no-amd\\": [
      \\"error\\"
    ],
    \\"import/no-unresolved\\": [
      \\"error\\",
      {
        \\"commonjs\\": true,
        \\"caseSensitive\\": true
      }
    ],
    \\"import/no-webpack-loader-syntax\\": [
      \\"error\\"
    ],
    \\"import/order\\": [
      \\"warn\\",
      {
        \\"groups\\": [
          \\"builtin\\",
          \\"external\\",
          \\"unknown\\",
          [
            \\"parent\\",
            \\"sibling\\",
            \\"index\\"
          ]
        ],
        \\"newlines-between\\": \\"always\\"
      }
    ],
    \\"jsdoc/check-alignment\\": [
      \\"warn\\"
    ],
    \\"jsdoc/check-param-names\\": [
      \\"warn\\"
    ],
    \\"jsdoc/check-tag-names\\": [
      \\"warn\\"
    ],
    \\"jsdoc/newline-after-description\\": [
      \\"warn\\"
    ],
    \\"jsdoc/no-types\\": [
      \\"warn\\"
    ],
    \\"jsdoc/require-param-description\\": [
      \\"warn\\"
    ],
    \\"jsdoc/require-param-name\\": [
      \\"warn\\"
    ],
    \\"jsdoc/require-returns-check\\": [
      \\"warn\\"
    ],
    \\"jsdoc/require-returns-description\\": [
      \\"warn\\"
    ],
    \\"jsx-a11y/accessible-emoji\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/alt-text\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/anchor-has-content\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/anchor-is-valid\\": [
      \\"error\\",
      {
        \\"aspects\\": [
          \\"noHref\\",
          \\"invalidHref\\"
        ]
      }
    ],
    \\"jsx-a11y/aria-activedescendant-has-tabindex\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/aria-props\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/aria-proptypes\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/aria-role\\": [
      \\"error\\",
      {
        \\"ignoreNonDOM\\": true
      }
    ],
    \\"jsx-a11y/aria-unsupported-elements\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/heading-has-content\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/iframe-has-title\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/img-redundant-alt\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/no-access-key\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/no-distracting-elements\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/no-redundant-roles\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/role-has-required-aria-props\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/role-supports-aria-props\\": [
      \\"error\\"
    ],
    \\"jsx-a11y/scope\\": [
      \\"error\\"
    ],
    \\"linebreak-style\\": [
      \\"warn\\",
      \\"unix\\"
    ],
    \\"max-depth\\": [
      \\"error\\",
      {
        \\"maximum\\": 4
      }
    ],
    \\"max-params\\": [
      \\"error\\",
      4
    ],
    \\"max-statements\\": [
      \\"error\\",
      30,
      {
        \\"ignoreTopLevelFunctions\\": true
      }
    ],
    \\"max-statements-per-line\\": [
      \\"error\\",
      {
        \\"max\\": 2
      }
    ],
    \\"new-parens\\": [
      \\"warn\\"
    ],
    \\"no-array-constructor\\": [
      \\"off\\"
    ],
    \\"no-async-promise-executor\\": [
      \\"error\\"
    ],
    \\"no-caller\\": [
      \\"error\\"
    ],
    \\"no-case-declarations\\": [
      \\"error\\"
    ],
    \\"no-class-assign\\": [
      \\"error\\"
    ],
    \\"no-compare-neg-zero\\": [
      \\"error\\"
    ],
    \\"no-cond-assign\\": [
      \\"error\\",
      \\"except-parens\\"
    ],
    \\"no-confusing-arrow\\": [
      \\"warn\\",
      {
        \\"allowParens\\": true
      }
    ],
    \\"no-const-assign\\": [
      \\"error\\"
    ],
    \\"no-constant-condition\\": [
      \\"error\\"
    ],
    \\"no-control-regex\\": [
      \\"error\\"
    ],
    \\"no-debugger\\": [
      \\"error\\"
    ],
    \\"no-delete-var\\": [
      \\"error\\"
    ],
    \\"no-div-regex\\": [
      \\"warn\\"
    ],
    \\"no-dupe-args\\": [
      \\"error\\"
    ],
    \\"no-dupe-class-members\\": [
      \\"error\\"
    ],
    \\"no-dupe-keys\\": [
      \\"error\\"
    ],
    \\"no-duplicate-case\\": [
      \\"error\\"
    ],
    \\"no-duplicate-imports\\": [
      \\"error\\"
    ],
    \\"no-empty\\": [
      \\"error\\",
      {
        \\"allowEmptyCatch\\": true
      }
    ],
    \\"no-empty-character-class\\": [
      \\"error\\"
    ],
    \\"no-empty-function\\": [
      \\"off\\"
    ],
    \\"no-empty-pattern\\": [
      \\"error\\"
    ],
    \\"no-eval\\": [
      \\"error\\"
    ],
    \\"no-ex-assign\\": [
      \\"error\\"
    ],
    \\"no-extend-native\\": [
      \\"error\\"
    ],
    \\"no-extra-bind\\": [
      \\"warn\\"
    ],
    \\"no-extra-boolean-cast\\": [
      \\"warn\\"
    ],
    \\"no-extra-label\\": [
      \\"warn\\"
    ],
    \\"no-extra-semi\\": [
      \\"warn\\"
    ],
    \\"no-fallthrough\\": [
      \\"error\\"
    ],
    \\"no-func-assign\\": [
      \\"error\\"
    ],
    \\"no-global-assign\\": [
      \\"error\\"
    ],
    \\"no-implied-eval\\": [
      \\"error\\"
    ],
    \\"no-inner-declarations\\": [
      \\"error\\"
    ],
    \\"no-invalid-regexp\\": [
      \\"error\\"
    ],
    \\"no-irregular-whitespace\\": [
      \\"error\\"
    ],
    \\"no-iterator\\": [
      \\"error\\"
    ],
    \\"no-label-var\\": [
      \\"error\\"
    ],
    \\"no-labels\\": [
      \\"error\\",
      {
        \\"allowLoop\\": true,
        \\"allowSwitch\\": false
      }
    ],
    \\"no-lone-blocks\\": [
      \\"error\\"
    ],
    \\"no-loop-func\\": [
      \\"error\\"
    ],
    \\"no-misleading-character-class\\": [
      \\"error\\"
    ],
    \\"no-mixed-operators\\": [
      \\"error\\",
      {
        \\"groups\\": [
          [
            \\"&\\",
            \\"|\\",
            \\"^\\",
            \\"~\\",
            \\"<<\\",
            \\">>\\",
            \\">>>\\"
          ],
          [
            \\"==\\",
            \\"!=\\",
            \\"===\\",
            \\"!==\\",
            \\">\\",
            \\">=\\",
            \\"<\\",
            \\"<=\\"
          ],
          [
            \\"&&\\",
            \\"||\\"
          ],
          [
            \\"in\\",
            \\"instanceof\\"
          ]
        ],
        \\"allowSamePrecedence\\": false
      }
    ],
    \\"no-mixed-spaces-and-tabs\\": [
      \\"error\\"
    ],
    \\"no-multi-str\\": [
      \\"error\\"
    ],
    \\"no-multiple-empty-lines\\": [
      \\"warn\\",
      {
        \\"max\\": 4,
        \\"maxBOF\\": 0,
        \\"maxEOF\\": 1
      }
    ],
    \\"no-nested-ternary\\": [
      \\"error\\"
    ],
    \\"no-new-func\\": [
      \\"error\\"
    ],
    \\"no-new-object\\": [
      \\"error\\"
    ],
    \\"no-new-symbol\\": [
      \\"error\\"
    ],
    \\"no-new-wrappers\\": [
      \\"error\\"
    ],
    \\"no-obj-calls\\": [
      \\"error\\"
    ],
    \\"no-octal\\": [
      \\"error\\"
    ],
    \\"no-octal-escape\\": [
      \\"error\\"
    ],
    \\"no-param-reassign\\": [
      \\"error\\"
    ],
    \\"no-prototype-builtins\\": [
      \\"error\\"
    ],
    \\"no-redeclare\\": [
      \\"error\\",
      {
        \\"builtinGlobals\\": false
      }
    ],
    \\"no-regex-spaces\\": [
      \\"warn\\"
    ],
    \\"no-restricted-globals\\": [
      \\"error\\",
      \\"addEventListener\\",
      \\"blur\\",
      \\"close\\",
      \\"closed\\",
      \\"confirm\\",
      \\"defaultStatus\\",
      \\"defaultstatus\\",
      \\"event\\",
      \\"external\\",
      \\"find\\",
      \\"focus\\",
      \\"frameElement\\",
      \\"frames\\",
      \\"history\\",
      \\"innerHeight\\",
      \\"innerWidth\\",
      \\"length\\",
      \\"location\\",
      \\"locationbar\\",
      \\"menubar\\",
      \\"moveBy\\",
      \\"moveTo\\",
      \\"name\\",
      \\"onblur\\",
      \\"onerror\\",
      \\"onfocus\\",
      \\"onload\\",
      \\"onresize\\",
      \\"onunload\\",
      \\"open\\",
      \\"opener\\",
      \\"opera\\",
      \\"outerHeight\\",
      \\"outerWidth\\",
      \\"pageXOffset\\",
      \\"pageYOffset\\",
      \\"parent\\",
      \\"print\\",
      \\"removeEventListener\\",
      \\"resizeBy\\",
      \\"resizeTo\\",
      \\"screen\\",
      \\"screenLeft\\",
      \\"screenTop\\",
      \\"screenX\\",
      \\"screenY\\",
      \\"scroll\\",
      \\"scrollbars\\",
      \\"scrollBy\\",
      \\"scrollTo\\",
      \\"scrollX\\",
      \\"scrollY\\",
      \\"self\\",
      \\"status\\",
      \\"statusbar\\",
      \\"stop\\",
      \\"toolbar\\",
      \\"top\\"
    ],
    \\"no-restricted-properties\\": [
      \\"error\\",
      {
        \\"object\\": \\"require\\",
        \\"property\\": \\"ensure\\",
        \\"message\\": \\"Please use import() instead. More info: https://facebook.github.io/create-react-app/docs/code-splitting\\"
      },
      {
        \\"object\\": \\"System\\",
        \\"property\\": \\"import\\",
        \\"message\\": \\"Please use import() instead. More info: https://facebook.github.io/create-react-app/docs/code-splitting\\"
      }
    ],
    \\"no-restricted-syntax\\": [
      \\"error\\",
      \\"WithStatement\\"
    ],
    \\"no-script-url\\": [
      \\"error\\"
    ],
    \\"no-self-assign\\": [
      \\"error\\"
    ],
    \\"no-self-compare\\": [
      \\"error\\"
    ],
    \\"no-sequences\\": [
      \\"error\\"
    ],
    \\"no-shadow-restricted-names\\": [
      \\"error\\"
    ],
    \\"no-sparse-arrays\\": [
      \\"error\\"
    ],
    \\"no-template-curly-in-string\\": [
      \\"error\\"
    ],
    \\"no-this-before-super\\": [
      \\"error\\"
    ],
    \\"no-throw-literal\\": [
      \\"error\\"
    ],
    \\"no-trailing-spaces\\": [
      \\"warn\\"
    ],
    \\"no-undef\\": [
      \\"error\\"
    ],
    \\"no-underscore-dangle\\": [
      \\"off\\"
    ],
    \\"no-unexpected-multiline\\": [
      \\"error\\"
    ],
    \\"no-unmodified-loop-condition\\": [
      \\"error\\"
    ],
    \\"no-unneeded-ternary\\": [
      \\"warn\\"
    ],
    \\"no-unreachable\\": [
      \\"error\\"
    ],
    \\"no-unsafe-finally\\": [
      \\"error\\"
    ],
    \\"no-unsafe-negation\\": [
      \\"error\\"
    ],
    \\"no-unused-expressions\\": [
      \\"off\\"
    ],
    \\"no-unused-labels\\": [
      \\"warn\\"
    ],
    \\"no-unused-vars\\": [
      \\"off\\"
    ],
    \\"no-use-before-define\\": [
      \\"off\\"
    ],
    \\"no-useless-catch\\": [
      \\"error\\"
    ],
    \\"no-useless-computed-key\\": [
      \\"warn\\"
    ],
    \\"no-useless-concat\\": [
      \\"error\\"
    ],
    \\"no-useless-constructor\\": [
      \\"off\\"
    ],
    \\"no-useless-escape\\": [
      \\"error\\"
    ],
    \\"no-useless-rename\\": [
      \\"warn\\",
      {
        \\"ignoreDestructuring\\": false,
        \\"ignoreImport\\": false,
        \\"ignoreExport\\": false
      }
    ],
    \\"no-var\\": [
      \\"warn\\"
    ],
    \\"no-whitespace-before-property\\": [
      \\"warn\\"
    ],
    \\"no-with\\": [
      \\"error\\"
    ],
    \\"object-curly-spacing\\": [
      \\"warn\\",
      \\"always\\"
    ],
    \\"object-property-newline\\": [
      \\"warn\\",
      {
        \\"allowMultiplePropertiesPerLine\\": true,
        \\"allowAllPropertiesOnSameLine\\": false
      }
    ],
    \\"one-var-declaration-per-line\\": [
      \\"warn\\",
      \\"initializations\\"
    ],
    \\"operator-assignment\\": [
      \\"warn\\"
    ],
    \\"operator-linebreak\\": [
      \\"warn\\",
      \\"after\\",
      {
        \\"overrides\\": {
          \\"=\\": \\"before\\",
          \\"+=\\": \\"before\\",
          \\"-=\\": \\"before\\",
          \\"*=\\": \\"before\\",
          \\"**=\\": \\"before\\",
          \\"/=\\": \\"before\\",
          \\"%=\\": \\"before\\",
          \\"+\\": \\"before\\",
          \\"-\\": \\"before\\",
          \\"*\\": \\"before\\",
          \\"**\\": \\"before\\",
          \\"/\\": \\"before\\",
          \\"%\\": \\"before\\"
        }
      }
    ],
    \\"prefer-const\\": [
      \\"warn\\"
    ],
    \\"prefer-rest-params\\": [
      \\"error\\"
    ],
    \\"prefer-spread\\": [
      \\"error\\"
    ],
    \\"react-hooks/exhaustive-deps\\": [
      \\"error\\"
    ],
    \\"react-hooks/rules-of-hooks\\": [
      \\"error\\"
    ],
    \\"react/forbid-foreign-prop-types\\": [
      \\"error\\",
      {
        \\"allowInPropTypes\\": true
      }
    ],
    \\"react/jsx-no-comment-textnodes\\": [
      \\"error\\"
    ],
    \\"react/jsx-no-duplicate-props\\": [
      \\"error\\"
    ],
    \\"react/jsx-no-target-blank\\": [
      \\"error\\"
    ],
    \\"react/jsx-no-undef\\": [
      \\"error\\"
    ],
    \\"react/jsx-pascal-case\\": [
      \\"error\\",
      {
        \\"allowAllCaps\\": true,
        \\"ignore\\": []
      }
    ],
    \\"react/jsx-uses-react\\": [
      \\"error\\"
    ],
    \\"react/jsx-uses-vars\\": [
      \\"error\\"
    ],
    \\"react/no-danger-with-children\\": [
      \\"error\\"
    ],
    \\"react/no-direct-mutation-state\\": [
      \\"error\\"
    ],
    \\"react/no-is-mounted\\": [
      \\"error\\"
    ],
    \\"react/no-typos\\": [
      \\"error\\"
    ],
    \\"react/react-in-jsx-scope\\": [
      \\"error\\"
    ],
    \\"react/require-render-return\\": [
      \\"error\\"
    ],
    \\"react/style-prop-object\\": [
      \\"error\\"
    ],
    \\"require-yield\\": [
      \\"error\\"
    ],
    \\"rest-spread-spacing\\": [
      \\"warn\\",
      \\"never\\"
    ],
    \\"shopify-lean/jsx-no-complex-expressions\\": [
      \\"error\\"
    ],
    \\"shopify-lean/jsx-no-hardcoded-content\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/jsx-prefer-fragment-wrappers\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/no-ancestor-directory-import\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/no-namespace-imports\\": [
      \\"error\\"
    ],
    \\"shopify-lean/no-useless-computed-properties\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/prefer-class-properties\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/prefer-early-return\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/prefer-module-scope-constants\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/react-no-multiple-render-methods\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/react-prefer-private-members\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/react-type-state\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/restrict-full-import\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/strict-component-boundaries\\": [
      \\"warn\\"
    ],
    \\"shopify-lean/typescript/prefer-singular-enums\\": [
      \\"warn\\"
    ],
    \\"sort-imports\\": [
      \\"warn\\",
      {
        \\"ignoreDeclarationSort\\": true,
        \\"ignoreCase\\": false,
        \\"ignoreMemberSort\\": false
      }
    ],
    \\"spaced-comment\\": [
      \\"warn\\",
      \\"always\\",
      {
        \\"exceptions\\": [
          \\"*\\",
          \\"=\\",
          \\"-\\"
        ]
      }
    ],
    \\"strict\\": [
      \\"warn\\",
      \\"never\\"
    ],
    \\"unicode-bom\\": [
      \\"warn\\",
      \\"never\\"
    ],
    \\"unicorn/better-regex\\": [
      \\"warn\\"
    ],
    \\"unicorn/consistent-function-scoping\\": [
      \\"warn\\"
    ],
    \\"unicorn/custom-error-definition\\": [
      \\"warn\\"
    ],
    \\"unicorn/explicit-length-check\\": [
      \\"warn\\"
    ],
    \\"unicorn/filename-case\\": [
      \\"warn\\",
      {
        \\"cases\\": {
          \\"camelCase\\": true,
          \\"pascalCase\\": true
        }
      }
    ],
    \\"unicorn/import-index\\": [
      \\"warn\\"
    ],
    \\"unicorn/new-for-builtins\\": [
      \\"warn\\"
    ],
    \\"unicorn/no-array-instanceof\\": [
      \\"warn\\"
    ],
    \\"unicorn/no-nested-ternary\\": [
      \\"warn\\"
    ],
    \\"unicorn/no-new-buffer\\": [
      \\"warn\\"
    ],
    \\"unicorn/no-unreadable-array-destructuring\\": [
      \\"warn\\"
    ],
    \\"unicorn/no-unsafe-regex\\": [
      \\"warn\\"
    ],
    \\"unicorn/no-zero-fractions\\": [
      \\"warn\\"
    ],
    \\"unicorn/prefer-includes\\": [
      \\"warn\\"
    ],
    \\"unicorn/prefer-replace-all\\": [
      \\"warn\\"
    ],
    \\"unicorn/prefer-set-has\\": [
      \\"warn\\"
    ],
    \\"unicorn/prefer-spread\\": [
      \\"warn\\"
    ],
    \\"unicorn/prefer-starts-ends-with\\": [
      \\"warn\\"
    ],
    \\"unicorn/prefer-string-slice\\": [
      \\"warn\\"
    ],
    \\"unicorn/prefer-type-error\\": [
      \\"warn\\"
    ],
    \\"unicorn/throw-new-error\\": [
      \\"warn\\"
    ],
    \\"use-isnan\\": [
      \\"error\\"
    ],
    \\"valid-typeof\\": [
      \\"error\\"
    ],
    \\"wrap-regex\\": [
      \\"warn\\"
    ]
  },
  \\"settings\\": {
    \\"import/extensions\\": [
      \\".d.ts\\",
      \\".js\\",
      \\".jsx\\",
      \\".ts\\",
      \\".tsx\\",
      \\".mjs\\",
      \\".json\\"
    ],
    \\"import/resolver\\": {
      \\"babel-module\\": {
        \\"alias\\": {
          \\"-\\": \\"./src/\\"
        },
        \\"extensions\\": [
          \\".js\\",
          \\".jsx\\",
          \\".d.ts\\",
          \\".ts\\",
          \\".tsx\\",
          \\".mjs\\",
          \\".json\\"
        ]
      }
    },
    \\"react\\": {
      \\"version\\": \\"detect\\"
    }
  }
}"
`;

exports[`load config in eslint to validate all rule syntax is correct 1`] = `
Object {
  "errorCount": 1,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "results": Array [
    Object {
      "errorCount": 1,
      "filePath": "<text>",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 19,
          "line": 2,
          "message": "Unexpected empty function 'second'.",
          "messageId": "unexpected",
          "nodeType": "FunctionDeclaration",
          "ruleId": "@typescript-eslint/no-empty-function",
          "severity": 2,
        },
      ],
      "source": "const first = 1
function second() {}
second(first)
",
      "warningCount": 0,
    },
  ],
  "usedDeprecatedRules": Array [],
  "warningCount": 0,
}
`;

exports[`reports undeclared variable 1`] = `
Object {
  "errorCount": 1,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "results": Array [
    Object {
      "errorCount": 1,
      "filePath": "<text>",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 1,
          "endColumn": 2,
          "endLine": 1,
          "line": 1,
          "message": "'i' is not defined.",
          "messageId": "undef",
          "nodeType": "Identifier",
          "ruleId": "no-undef",
          "severity": 2,
        },
      ],
      "source": "i++",
      "warningCount": 0,
    },
  ],
  "usedDeprecatedRules": Array [],
  "warningCount": 0,
}
`;
